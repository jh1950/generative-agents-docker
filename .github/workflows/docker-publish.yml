---
name: Docker Publish
on:  # yamllint disable-line rule:truthy
  push:
    branches:
      - main
    paths:
      - "Dockerfile"
      - "scripts/*"
  release:
    types:
      - published

jobs:
  Publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Variables
        id: vars
        run: |
          if [ "${{ github.event_name }}" != "release" ]; then
            echo "LATEST=false" >> $GITHUB_OUTPUT
            echo "TAGS=dev" >> $GITHUB_OUTPUT
          else
            echo "LATEST=true" >> $GITHUB_OUTPUT
            echo "TAGS<<EOF" >> $GITHUB_OUTPUT
            echo "type=semver,pattern={{version}}" >> $GITHUB_OUTPUT
            echo "type=semver,pattern={{major}}.{{minor}}" >> $GITHUB_OUTPUT
            echo "type=semver,pattern={{major}}" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi

      - name: Docker meta
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: |
            ${{ github.repository }}
            ghcr.io/${{ github.repository }}
          tags: ${{ steps.vars.outputs.TAGS }}
          flavor: latest=${{ steps.vars.outputs.LATEST }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true
          provenance: false

      - name: Docker Hub Description
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: ${{ github.repository }}
