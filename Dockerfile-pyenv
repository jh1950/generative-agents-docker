FROM debian:bookworm-slim

LABEL maintainer="rlawnsgl191@gmail.com"

ARG VERSION="unknown"
ENV TZ="UTC" \
    PUID=1000 \
    PGID=1000 \
    DATA_DIR="/data" \
    REPO_URL="https://github.com/joonspk-research/generative_agents" \
    AUTO_UPDATE=false \
    REQUIREMENTS="requirements.txt" \
    FRONTEND_ROOT="environment/frontend_server" \
    CONFIG_FILE="" \
    SYNC_TZ=true \
    ALLOWED_HOSTS="" \
    BACKEND_ROOT="reverie/backend_server" \
    CUSTOM_UTILS=false \
    IMAGE_VERSION=$VERSION \
	PYENV_ENABLED=true \
    PYENV_ROOT="/pyenv" \
    PYENV_AUTO_UPDATE=true \
    PYTHON_VERSION="3.9.12"
ENV PATH="$PYENV_ROOT/bin:$PATH"



SHELL ["/bin/bash", "-o", "pipefail", "-c"]

# hadolint ignore=DL3008
RUN apt-get update -y \
 && apt-get install --no-install-recommends --no-install-suggests -y \
    git curl make build-essential llvm \
    libssl-dev zlib1g-dev libbz2-dev \
    libreadline-dev libsqlite3-dev \
    libncurses5-dev libncursesw5-dev \
    libffi-dev liblzma-dev \
    xz-utils tk-dev python3-openssl \
    # pyenv dependency end
    jq procps \
    libfreetype6-dev \
    ca-certificates \
 && useradd -ms /bin/bash user \
 && curl -sfSL https://pyenv.run | bash \
 && pyenv update \
 && ln -s "$DATA_DIR/pyenv-versions" "$PYENV_ROOT/versions" \
 && echo -e "eval \"\$(pyenv init -)\"\neval \"\$(pyenv virtualenv-init -)\"" >> /home/user/.bashrc \
 && apt-get clean \
 && rm -rf /var/lib/apt/lists/*

COPY ./scripts /scripts
RUN chmod 755 /scripts/*.sh \
 && for file in shell venv django-shell; do \
        cp /scripts/connect-copy.sh /usr/local/bin/"$file"; \
    done \
 && for file in backend reverie; do \
        cp /scripts/backend.sh /usr/local/bin/"$file"; \
    done \
 && rm /scripts/connect-copy.sh /scripts/backend.sh \
 && chown -R user:user /scripts



WORKDIR /scripts

HEALTHCHECK \
    --timeout=5s \
    --start-period=5m \
    --retries=1 \
    CMD pgrep -f "manage.py" > /dev/null || exit 1

ENTRYPOINT ["/scripts/entrypoint.sh"]
